{"version":3,"sources":["utils/api.js","contexts/CurrentUserContext.js","components/Footer.js","components/Header.js","components/Card.js","components/Main.js","components/PopupWithImage.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddCardPopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","options","this","baseUrl","headers","Promise","all","getInitialCards","getUserInfo","fetch","res","ok","json","reject","status","cardId","isLiked","method","title","link","body","JSON","stringify","name","url","avatar","info","about","authorization","CurrentUserContext","createContext","Footer","className","Header","role","aria-label","Card","props","currentUser","useContext","isOwn","card","owner","_id","likes","some","i","type","onClick","onCardDelete","style","backgroundImage","alt","onCardClick","onCardLike","length","Main","onEditAvatar","onEditProfile","onAddCard","cards","map","index","PopupWithImage","isOpen","onClose","src","PopupWithForm","noValidate","shouldNotValidate","onSubmit","children","value","buttonValue","EditProfilePopup","useState","setName","description","setDescription","useEffect","e","preventDefault","onUpdateUser","id","placeholder","required","minLength","maxLength","defaultValue","onChange","target","EditAvatarPopup","avatarInput","useRef","onUpdateAvatar","ref","AddCardPopup","setTitle","setLink","App","setCurrentUser","setCards","selectedCard","setSelectedCard","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddCardPopupOpen","setIsAddCardPopupOpen","isImagePopupOpen","setIsImagePopupOpen","closeAllPopups","then","catch","err","console","log","Provider","handleCardClick","updateCardLikes","newCard","newCards","c","handleCardLike","deleteCard","filter","handleCardDelete","patchUserInfo","patchAvatarImage","current","postCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a0e76e2.chunk.js","sourcesContent":["class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  getInitialCardsAndUserInfo() {\n    return Promise.all([this.getInitialCards(), this.getUserInfo()]);\n  }\n\n  async getUserInfo() {\n    const res = await fetch(this.baseUrl + '/users/me', {\n      headers: this.headers,\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  async getInitialCards() {\n    const res = await fetch(this.baseUrl + '/cards', {\n      headers: this.headers,\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  async updateCardLikes(cardId, isLiked) {\n    const method = isLiked ? 'DELETE' : 'PUT';\n    const res = await fetch(this.baseUrl + '/cards/likes/' + cardId, {\n      headers: this.headers,\n      method: method,\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  async deleteCard(cardId) {\n    const res = await fetch(this.baseUrl + '/cards/' + cardId, {\n      headers: this.headers,\n      method: 'DELETE',\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  async postCard({ title, link }) {\n    const res = await fetch(this.baseUrl + '/cards', {\n      headers: this.headers,\n      method: 'POST',\n      body: JSON.stringify({ name: title, link: link }),\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  async patchAvatarImage(url) {\n    const res = await fetch(this.baseUrl + '/users/me/avatar', {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({ avatar: url }),\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  async patchUserInfo(info) {\n    const res = await fetch(this.baseUrl + '/users/me', {\n      headers: this.headers,\n      method: 'PATCH',\n      body: JSON.stringify({ name: info.name, about: info.about }),\n    });\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://around.nomoreparties.co/v1/group-5',\n  headers: {\n    authorization: '8cd049ee-8ebb-4e3d-8437-51e87560cee5',\n    'Content-Type': 'application/json',\n  },\n});\n\nexport default api;\n","import { createContext } from 'react';\n\nconst CurrentUserContext = createContext({});\n\nexport default CurrentUserContext;\n","function Footer() {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__text\">© 2020 Around The U.S.</p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","function Header() {\n  return (\n    <header className=\"header\">\n      <div\n        role=\"img\"\n        aria-label=\"Around The U.S.\"\n        className=\"header__logo\"\n      ></div>\n    </header>\n  );\n}\n\nexport default Header;\n","import { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\n\nfunction Card(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  const isOwn = props.card.owner._id === currentUser._id;\n  const isLiked = props.card.likes.some((i) => i._id === currentUser._id);\n\n  return (\n    <li className=\"card\">\n      <button\n        type=\"button\"\n        className={`button button_type_delete ${\n          isOwn ? '' : 'button_type_delete_hidden'\n        }`}\n        onClick={props.onCardDelete}\n      ></button>\n      <div\n        role=\"img\"\n        className=\"card__image\"\n        style={{ backgroundImage: `url(${props.card.link})` }}\n        alt={props.card.name}\n        onClick={props.onCardClick}\n      ></div>\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{props.card.name}</h2>\n        <div>\n          <button\n            type=\"button\"\n            aria-label=\"Like\"\n            className={`button button_type_like ${\n              isLiked ? 'button_type_liked' : ''\n            }`}\n            onClick={props.onCardLike}\n          ></button>\n          <p className=\"card__likes\">{props.card.likes.length}</p>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import { useContext } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Card from './Card';\n\nfunction Main(props) {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"main\">\n      <section className=\"profile\">\n        <div className=\"profile__data\">\n          <div>\n            <div\n              role=\"img\"\n              aria-label=\"\"\n              className=\"profile__avatar\"\n              style={{ backgroundImage: `url(${currentUser.avatar})` }}\n              onClick={props.onEditAvatar}\n            ></div>\n            <button\n              type=\"button\"\n              aria-label=\"Edit avatar\"\n              className=\"button button_type_edit-avatar\"\n              onClick={props.onEditAvatar}\n            ></button>\n          </div>\n          <div className=\"profile__info\">\n            <div className=\"profile__text\">\n              <h1 className=\"profile__name\">{currentUser.name}</h1>\n              <p className=\"profile__job\">{currentUser.about}</p>\n            </div>\n            <button\n              type=\"button\"\n              aria-label=\"Edit profile\"\n              className=\"button button_type_edit\"\n              onClick={props.onEditProfile}\n            ></button>\n          </div>\n        </div>\n        <button\n          aria-label=\"Add card\"\n          className=\"button button_type_add\"\n          onClick={props.onAddCard}\n        ></button>\n      </section>\n\n      <section className=\"places\">\n        <ul className=\"places__list\">\n          {props.cards.map((card, index) => (\n            <Card\n              key={index}\n              card={card}\n              onCardClick={() => props.onCardClick(card)}\n              onCardLike={() => props.onCardLike(card)}\n              onCardDelete={() => props.onCardDelete(card)}\n            />\n          ))}\n        </ul>\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","function PopupWithImage(props) {\n  return (\n    <div\n      className={`popup popup_type_image ${props.isOpen ? 'popup_opened' : ''}`}\n      onClick={props.onClose}\n    >\n      <div className=\"popup__container popup__container_type_image\">\n        <button\n          type=\"button\"\n          aria-label=\"Close\"\n          className=\"button button_type_close button_type_close_type_image\"\n          onClick={props.onClose}\n        ></button>\n        <figure className=\"popup__figure\">\n          <img\n            className=\"popup__image\"\n            src={props.card.link}\n            alt={props.card.title}\n          />\n          <figcaption className=\"popup__caption\">{props.card.name}</figcaption>\n        </figure>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithImage;\n","function PopupWithForm(props) {\n  return (\n    <div\n      className={`popup popup_type_${props.name} ${\n        props.isOpen ? 'popup_opened' : ''\n      }`}\n    >\n      <div className=\"popup__container\">\n        <button\n          type=\"button\"\n          aria-label=\"Close\"\n          className=\"button button_type_close\"\n          onClick={props.onClose}\n        ></button>\n\n        <h3 className=\"popup__title\">{props.title}</h3>\n\n        <form\n          method=\"POST\"\n          name={`popup_type_${props.name}`}\n          className={`popup__form popup__form_type_${props.name}`}\n          noValidate={props.shouldNotValidate ? true : false}\n          onSubmit={props.onSubmit}\n        >\n          {props.children}\n          <input\n            type=\"submit\"\n            value={`${props.buttonValue}`}\n            className=\"button button_type_submit popup__button\"\n          />\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import { useContext, useEffect, useState } from 'react';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup(props) {\n  const currentUser = useContext(CurrentUserContext);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateUser({ name, about: description });\n  }\n\n  useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  return (\n    <PopupWithForm\n      name=\"edit\"\n      title=\"Edit profile\"\n      buttonValue=\"Save\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"profile-name\"\n          className=\"popup__input popup__input_type_name\"\n          placeholder=\"Name\"\n          required\n          minLength=\"2\"\n          maxLength=\"40\"\n          defaultValue={name}\n          onChange={handleNameChange}\n        />\n        <span className=\"popup__error\" id=\"profile-name-error\"></span>\n      </label>\n      <label>\n        <input\n          type=\"text\"\n          name=\"job\"\n          id=\"profile-job\"\n          className=\"popup__input popup__input_type_job\"\n          placeholder=\"About me\"\n          required\n          minLength=\"2\"\n          maxLength=\"200\"\n          defaultValue={description}\n          onChange={handleDescriptionChange}\n        />\n        <span className=\"popup__error\" id=\"profile-job-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;\n","import { useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const avatarInput = useRef('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onUpdateAvatar({\n      avatar: avatarInput,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"edit-avatar\"\n      title=\"Change profile picture\"\n      buttonValue=\"Save\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <label>\n        <input\n          type=\"url\"\n          name=\"url\"\n          id=\"profile-avatar\"\n          className=\"popup__input\"\n          placeholder=\"Image link\"\n          required\n          ref={avatarInput}\n        />\n        <span className=\"popup__error\" id=\"profile-avatar-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import { useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddCardPopup(props) {\n  const [title, setTitle] = useState('');\n  const [link, setLink] = useState('');\n\n  function handleTitleChange(e) {\n    setTitle(e.target.value);\n  }\n  function handleLinkChange(e) {\n    setLink(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onAddCard({ title, link });\n  }\n\n  useEffect(() => {\n    setTitle('');\n    setLink('');\n  }, [props.isOpen]);\n\n  return (\n    <PopupWithForm\n      name=\"add\"\n      title=\"New place\"\n      buttonValue=\"Create\"\n      isOpen={props.isOpen}\n      onClose={props.onClose}\n      onSubmit={handleSubmit}\n    >\n      <label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"card-title\"\n          className=\"popup__input popup__input_type_title\"\n          placeholder=\"Title\"\n          required\n          minLength=\"2\"\n          maxLength=\"30\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n        <span className=\"popup__error\" id=\"card-title-error\"></span>\n      </label>\n\n      <label>\n        <input\n          type=\"url\"\n          name=\"url\"\n          id=\"card-url\"\n          className=\"popup__input popup__input_type_image-url\"\n          placeholder=\"Image link\"\n          required\n          value={link}\n          onChange={handleLinkChange}\n        />\n        <span className=\"popup__error\" id=\"card-url-error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n\nexport default AddCardPopup;\n","import { useEffect, useState } from 'react';\nimport api from '../utils/api';\nimport CurrentUserContext from '../contexts/CurrentUserContext';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithImage from './PopupWithImage';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddCardPopup from './AddCardPopup';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState({});\n\n  const [cards, setCards] = useState([]);\n\n  const [selectedCard, setSelectedCard] = useState({ link: '', name: '' });\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddCardPopupOpen, setIsAddCardPopupOpen] = useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = useState(false);\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddCardPopupOpen(true);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard({ link: card.link, name: card.name });\n    setIsImagePopupOpen(true);\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    api\n      .updateCardLikes(card._id, isLiked)\n      .then((newCard) => {\n        const newCards = cards.map((c) => (c._id === card._id ? newCard : c));\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n      })\n      .catch((err) => console.log(err));\n  }\n\n  function closeAllPopups(e) {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddCardPopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .patchUserInfo({ name, about })\n      .then((res) => setCurrentUser(res))\n      .then(closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .patchAvatarImage(avatar.current.value)\n      .then((res) => setCurrentUser(res))\n      .then(closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  function handleAddCard({ title, link }) {\n    api\n      .postCard({ title, link })\n      .then((newCard) => setCards([newCard, ...cards]))\n      .then(closeAllPopups())\n      .catch((err) => console.log(err));\n  }\n\n  useEffect(\n    () =>\n      api\n        .getUserInfo()\n        .then((res) => setCurrentUser(res))\n        .catch((err) => console.log(err)),\n    []\n  );\n\n  useEffect(\n    () =>\n      api\n        .getInitialCards()\n        .then((cards) => setCards(cards))\n        .catch((err) => console.log(err)),\n    []\n  );\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <div className=\"page__container\">\n          <Header />\n          <Main\n            cards={cards}\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddCard={handleAddPlaceClick}\n            onCardClick={(card) => handleCardClick(card)}\n            onCardLike={(card) => handleCardLike(card)}\n            onCardDelete={(card) => handleCardDelete(card)}\n          />\n          <Footer />\n\n          <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n          />\n\n          <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n          />\n\n          <AddCardPopup\n            isOpen={isAddCardPopupOpen}\n            onClose={closeAllPopups}\n            onAddCard={handleAddCard}\n          />\n\n          <PopupWithImage\n            card={selectedCard}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n          />\n        </div>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './components/App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}